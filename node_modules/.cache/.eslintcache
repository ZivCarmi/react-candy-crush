[{"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\index.js":"1","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\App.js":"2","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ScoreProvider.js":"3","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Head.js":"4","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Board.js":"5","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Score.js":"6","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\SidePanel.js":"7","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\sheet.js":"8","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\input.js":"9","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\button.js":"10","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Hints.js":"11","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Rankings.js":"12","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Save.js":"13","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\lib\\constants.js":"14","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\lib\\utils.js":"15","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\HammerHint.js":"16","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\RankingList.js":"17","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Loader.js":"18","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\config\\index.js":"19","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\RankingUser.js":"20"},{"size":320,"mtime":1706611331792,"results":"21","hashOfConfig":"22"},{"size":441,"mtime":1706615795614,"results":"23","hashOfConfig":"22"},{"size":592,"mtime":1706558123430,"results":"24","hashOfConfig":"22"},{"size":128,"mtime":1706557202294,"results":"25","hashOfConfig":"22"},{"size":8994,"mtime":1706612442183,"results":"26","hashOfConfig":"22"},{"size":168,"mtime":1706558089513,"results":"27","hashOfConfig":"22"},{"size":319,"mtime":1706558192531,"results":"28","hashOfConfig":"22"},{"size":3767,"mtime":1706615108258,"results":"29","hashOfConfig":"22"},{"size":710,"mtime":1706615099613,"results":"30","hashOfConfig":"22"},{"size":1697,"mtime":1706615105326,"results":"31","hashOfConfig":"22"},{"size":413,"mtime":1706557204803,"results":"32","hashOfConfig":"22"},{"size":672,"mtime":1706561828896,"results":"33","hashOfConfig":"22"},{"size":1835,"mtime":1706561825141,"results":"34","hashOfConfig":"22"},{"size":531,"mtime":1706610724211,"results":"35","hashOfConfig":"22"},{"size":144,"mtime":1706610288614,"results":"36","hashOfConfig":"22"},{"size":1306,"mtime":1706610596614,"results":"37","hashOfConfig":"22"},{"size":435,"mtime":1706558645101,"results":"38","hashOfConfig":"22"},{"size":102,"mtime":1706557221469,"results":"39","hashOfConfig":"22"},{"size":149,"mtime":1706561820637,"results":"40","hashOfConfig":"22"},{"size":214,"mtime":1706558566976,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u4epl2",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\index.js",[],["85","86"],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\App.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ScoreProvider.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Head.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Board.js",["87","88","89","90","91","92","93"],"import { useEffect, useState } from \"react\";\r\nimport Blank from \"../images/blank.png\";\r\nimport { width, candyColors, firstRowIndexes } from \"../lib/constants\";\r\nimport Hints from \"./Hints\";\r\nimport { useScore } from \"./ScoreProvider\";\r\n\r\nexport default function Board() {\r\n  const [board, setBoard] = useState([]);\r\n  const [draggedCandy, setDraggedCandy] = useState(null);\r\n  const [candyToBeSwitch, setCandyToBeSwitch] = useState(null);\r\n  const { score, setScore } = useScore();\r\n  const [isHintClicked, setIsHintClicked] = useState(false);\r\n  const [cursor, setCursor] = useState(null);\r\n  const [candyToHammer, setCandyToHammer] = useState(null);\r\n\r\n  const createBoard = () => {\r\n    const randomBoard = [];\r\n    for (let i = 0; i < width * width; i++) {\r\n      randomBoard.push(\r\n        candyColors[Math.floor(Math.random() * candyColors.length)]\r\n      );\r\n    }\r\n\r\n    setBoard(randomBoard);\r\n  };\r\n\r\n  const checkForColumnOfFive = () => {\r\n    for (let i = 0; i < width * width - width * 4; i++) {\r\n      const candiesToCheck = [\r\n        i,\r\n        i + width,\r\n        i + width * 2,\r\n        i + width * 3,\r\n        i + width * 4,\r\n      ];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfFive = () => {\r\n    for (let i = 0; i < width * width - 4; i++) {\r\n      const candiesToPassCheck = [\r\n        4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38,\r\n        39, 44, 45, 46, 47, 52, 53, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3, i + 4];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForColumnOfFour = () => {\r\n    for (let i = 0; i < width * width - width * 3; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2, i + width * 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfFour = () => {\r\n    for (let i = 0; i < width * width - 3; i++) {\r\n      const candiesToPassCheck = [\r\n        5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53,\r\n        54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForColumnOfThree = () => {\r\n    for (let i = 0; i < width * width - width * 2; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfThree = () => {\r\n    for (let i = 0; i < width * width - 2; i++) {\r\n      // need to rethink that array to be dynamic\r\n      const candiesToPassCheck = [\r\n        6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveDownASquare = () => {\r\n    for (let i = board.length - 1; i >= 0; i--) {\r\n      // generate random candy into blank squares\r\n      if (firstRowIndexes.includes(i) && board[i] === Blank) {\r\n        board[i] = candyColors[Math.floor(Math.random() * candyColors.length)];\r\n      }\r\n\r\n      // move candy to square below\r\n      if (board[i] === Blank) {\r\n        board[i] = board[i - width];\r\n        board[i - width] = Blank;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragStart = (e) => {\r\n    setDraggedCandy(e.target);\r\n  };\r\n\r\n  const onDragDrop = (e) => {\r\n    setCandyToBeSwitch(e.target);\r\n  };\r\n\r\n  const onDragEnd = () => {\r\n    if (draggedCandy && candyToBeSwitch) {\r\n      const candyBeingDraggedIndex = parseInt(\r\n        draggedCandy.getAttribute(\"data-index\")\r\n      );\r\n      const candyBeingReplacedIndex = parseInt(\r\n        candyToBeSwitch.getAttribute(\"data-index\")\r\n      );\r\n\r\n      const validMoves = [\r\n        candyBeingDraggedIndex - width,\r\n        candyBeingDraggedIndex + 1,\r\n        candyBeingDraggedIndex + width,\r\n        candyBeingDraggedIndex - 1,\r\n      ];\r\n      const isValidMove = validMoves.includes(candyBeingReplacedIndex);\r\n\r\n      if (isValidMove) {\r\n        board[candyBeingDraggedIndex] = candyToBeSwitch.getAttribute(\"src\");\r\n        board[candyBeingReplacedIndex] = draggedCandy.getAttribute(\"src\");\r\n\r\n        const isAColumnOfFive = checkForColumnOfFive();\r\n        const isARowOfFive = checkForRowOfFive();\r\n        const isAColumnOfFour = checkForColumnOfFour();\r\n        const isARowOfFour = checkForRowOfFour();\r\n        const isAColumnOfThree = checkForColumnOfThree();\r\n        const isARowOfThree = checkForRowOfThree();\r\n\r\n        if (\r\n          candyToBeSwitch &&\r\n          (isAColumnOfFive ||\r\n            isARowOfFive ||\r\n            isAColumnOfFour ||\r\n            isARowOfFour ||\r\n            isAColumnOfThree ||\r\n            isARowOfThree)\r\n        ) {\r\n          setDraggedCandy(null);\r\n          setCandyToBeSwitch(null);\r\n        } else {\r\n          board[candyBeingDraggedIndex] = draggedCandy.getAttribute(\"src\");\r\n          board[candyBeingReplacedIndex] = candyToBeSwitch.getAttribute(\"src\");\r\n          setBoard([...board]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const setCandyToHammerTarget = (e) => {\r\n    setCandyToHammer(e.target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createBoard();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      checkForColumnOfFive();\r\n      checkForRowOfFive();\r\n      checkForColumnOfFour();\r\n      checkForRowOfFour();\r\n      checkForColumnOfThree();\r\n      checkForRowOfThree();\r\n      moveDownASquare();\r\n      setBoard([...board]);\r\n    }, 200);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [\r\n    checkForColumnOfFive,\r\n    checkForRowOfFive,\r\n    checkForColumnOfFour,\r\n    checkForRowOfFour,\r\n    checkForColumnOfThree,\r\n    checkForRowOfThree,\r\n    moveDownASquare,\r\n    board,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={`board-container${cursor ? \" custom-cursor\" : \"\"}`}\r\n      style={{ cursor: cursor ? `${cursor}, auto` : \"\" }}\r\n    >\r\n      <div className=\"board\">\r\n        {board.map((candy, index) => {\r\n          return (\r\n            <img\r\n              src={candy}\r\n              alt=\"\"\r\n              className=\"candy\"\r\n              data-index={index}\r\n              key={index}\r\n              draggable=\"true\"\r\n              onDragStart={onDragStart}\r\n              onDrop={onDragDrop}\r\n              onDragOver={(e) => e.preventDefault()}\r\n              onDragEnter={(e) => e.preventDefault()}\r\n              onDragLeave={(e) => e.preventDefault()}\r\n              onDragEnd={onDragEnd}\r\n              onClick={isHintClicked ? setCandyToHammerTarget : null}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Hints\r\n        boardState={{ board, setBoard }}\r\n        cursorState={{ cursor, setCursor }}\r\n        isHintClickedState={{ isHintClicked, setIsHintClicked }}\r\n        candyToHammerState={{ candyToHammer, setCandyToHammer }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Score.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\SidePanel.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\sheet.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\input.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\ui\\button.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Hints.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Rankings.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Save.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\lib\\constants.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\lib\\utils.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\HammerHint.js",["94"],"import { useEffect, useState } from \"react\";\r\nimport Hammer from \"../images/hammer.png\";\r\nimport Blank from \"../images/blank.png\";\r\n\r\nexport default function HammerHint({\r\n  boardState,\r\n  cursorState,\r\n  isHintClickedState,\r\n  candyToHammerState,\r\n}) {\r\n  const { board, setBoard } = boardState;\r\n  const { setCursor } = cursorState;\r\n  const { setIsHintClicked } = isHintClickedState;\r\n  const { candyToHammer, setCandyToHammer } = candyToHammerState;\r\n  const [useCount, setUseCount] = useState(3);\r\n\r\n  const HammerHint = () => {\r\n    if (!useCount) return;\r\n\r\n    setCursor(`url(\"${Hammer}\")`);\r\n    setIsHintClicked(true);\r\n  };\r\n\r\n  const hammerCandy = () => {\r\n    if (!candyToHammer) return;\r\n\r\n    const candyToHammerIndex = candyToHammer.dataset.index;\r\n    board[candyToHammerIndex] = Blank;\r\n    setBoard([...board]);\r\n    setCandyToHammer(null);\r\n    setIsHintClicked(false);\r\n    setCursor(null);\r\n    setUseCount(useCount - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    hammerCandy();\r\n  }, [hammerCandy]);\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        type=\"button\"\r\n        className=\"hint\"\r\n        onClick={HammerHint}\r\n        disabled={!useCount}\r\n      >\r\n        <span className=\"counter\">{useCount}</span>\r\n        <img src={Hammer} alt=\"Hammer\" />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\RankingList.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\Loader.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\config\\index.js",[],"C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\src\\components\\RankingUser.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":27,"column":9,"nodeType":"101","endLine":50,"endColumn":4,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":52,"column":9,"nodeType":"101","endLine":76,"endColumn":4,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":78,"column":9,"nodeType":"101","endLine":95,"endColumn":4,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":97,"column":9,"nodeType":"101","endLine":121,"endColumn":4,"suggestions":"108"},{"ruleId":"99","severity":1,"message":"109","line":123,"column":9,"nodeType":"101","endLine":140,"endColumn":4,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"111","line":142,"column":9,"nodeType":"101","endLine":166,"endColumn":4,"suggestions":"112"},{"ruleId":"99","severity":1,"message":"113","line":168,"column":9,"nodeType":"101","endLine":181,"endColumn":4},{"ruleId":"99","severity":1,"message":"114","line":24,"column":9,"nodeType":"101","endLine":34,"endColumn":4},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","The 'checkForColumnOfFive' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForColumnOfFive' in its own useCallback() Hook.","VariableDeclarator",["117"],"The 'checkForRowOfFive' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForRowOfFive' in its own useCallback() Hook.",["118"],"The 'checkForColumnOfFour' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.",["119"],"The 'checkForRowOfFour' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",["120"],"The 'checkForColumnOfThree' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",["121"],"The 'checkForRowOfThree' function makes the dependencies of useEffect Hook (at line 260) change on every render. To fix this, wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",["122"],"The 'moveDownASquare' function makes the dependencies of useEffect Hook (at line 260) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'moveDownASquare' in its own useCallback() Hook.","The 'hammerCandy' function makes the dependencies of useEffect Hook (at line 38) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'hammerCandy' in its own useCallback() Hook.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Wrap the definition of 'checkForColumnOfFive' in its own useCallback() Hook.",{"range":"135","text":"136"},"Wrap the definition of 'checkForRowOfFive' in its own useCallback() Hook.",{"range":"137","text":"138"},"Wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.",{"range":"139","text":"140"},"Wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",{"range":"141","text":"142"},"Wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",{"range":"143","text":"144"},"Wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",{"range":"145","text":"146"},[942,1548],"useCallback(() => {\r\n    for (let i = 0; i < width * width - width * 4; i++) {\r\n      const candiesToCheck = [\r\n        i,\r\n        i + width,\r\n        i + width * 2,\r\n        i + width * 3,\r\n        i + width * 4,\r\n      ];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  })",[1581,2325],"useCallback(() => {\r\n    for (let i = 0; i < width * width - 4; i++) {\r\n      const candiesToPassCheck = [\r\n        4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38,\r\n        39, 44, 45, 46, 47, 52, 53, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3, i + 4];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  })",[2361,2897],"useCallback(() => {\r\n    for (let i = 0; i < width * width - width * 3; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2, i + width * 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  })",[2930,3640],"useCallback(() => {\r\n    for (let i = 0; i < width * width - 3; i++) {\r\n      const candiesToPassCheck = [\r\n        5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53,\r\n        54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  })",[3677,4198],"useCallback(() => {\r\n    for (let i = 0; i < width * width - width * 2; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  })",[4232,4950],"useCallback(() => {\r\n    for (let i = 0; i < width * width - 2; i++) {\r\n      // need to rethink that array to be dynamic\r\n      const candiesToPassCheck = [\r\n        6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  })"]