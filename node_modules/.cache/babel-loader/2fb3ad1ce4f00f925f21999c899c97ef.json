{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ziv\\\\Desktop\\\\Work\\\\ziv-react-candy-crush\\\\src\\\\components\\\\Save.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useScore } from \"./ScoreProvider\";\nimport { BASE_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Save() {\n  _s();\n  const {\n    score\n  } = useScore();\n  const [nameValue, setNameValue] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // on input change\n  const handleChange = e => setNameValue(e.target.value);\n\n  // on button click\n  const validateAndSubmit = () => {\n    if (nameValue === \"\") {\n      setNameError(\"Name cannot be empty\");\n    } else if (nameValue.length < 2) {\n      setNameError(\"Name must contain at least 2 characters\");\n    } else if (nameValue.length > 12) {\n      setNameError(\"Name can not contain more than 12 characters\");\n    } else {\n      setNameError(\"\");\n      saveScore();\n    }\n  };\n  const saveScore = async () => {\n    const scoreData = {\n      name: nameValue,\n      score\n    };\n    axios.post(`${BASE_URL}/addscore`, scoreData).then(response => {\n      if (response.status === 200) {\n        setMessage(response.data.message);\n      }\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"save-score-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"save-score-title\",\n      children: \"Save Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nameValue,\n        onChange: handleChange,\n        placeholder: \"Your name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"save-score-btn\",\n      onClick: validateAndSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Save, \"CJW6M7cyHwZUujnJpdhsYRW0zKg=\", false, function () {\n  return [useScore];\n});\n_c = Save;\nvar _c;\n$RefreshReg$(_c, \"Save\");","map":{"version":3,"names":["axios","useState","useScore","BASE_URL","jsxDEV","_jsxDEV","Save","_s","score","nameValue","setNameValue","nameError","setNameError","message","setMessage","handleChange","e","target","value","validateAndSubmit","length","saveScore","scoreData","name","post","then","response","status","data","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ziv/Desktop/Work/ziv-react-candy-crush/src/components/Save.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useScore } from \"./ScoreProvider\";\r\nimport { BASE_URL } from \"../config\";\r\n\r\nexport default function Save() {\r\n  const { score } = useScore();\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // on input change\r\n  const handleChange = (e) => setNameValue(e.target.value);\r\n\r\n  // on button click\r\n  const validateAndSubmit = () => {\r\n    if (nameValue === \"\") {\r\n      setNameError(\"Name cannot be empty\");\r\n    } else if (nameValue.length < 2) {\r\n      setNameError(\"Name must contain at least 2 characters\");\r\n    } else if (nameValue.length > 12) {\r\n      setNameError(\"Name can not contain more than 12 characters\");\r\n    } else {\r\n      setNameError(\"\");\r\n      saveScore();\r\n    }\r\n  };\r\n\r\n  const saveScore = async () => {\r\n    const scoreData = {\r\n      name: nameValue,\r\n      score,\r\n    };\r\n\r\n    axios\r\n      .post(`${BASE_URL}/addscore`, scoreData)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setMessage(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"save-score-box\">\r\n      <h2 className=\"save-score-title\">Save Score</h2>\r\n      <div className=\"name-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={nameValue}\r\n          onChange={handleChange}\r\n          placeholder=\"Your name...\"\r\n        />\r\n        {nameError && <div className=\"error\">{nameError}</div>}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"save-score-btn\"\r\n        onClick={validateAndSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n      {message && <div className=\"success\">{message}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAM,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC5B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMc,YAAY,GAAIC,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;;EAExD;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIV,SAAS,KAAK,EAAE,EAAE;MACpBG,YAAY,CAAC,sBAAsB,CAAC;IACtC,CAAC,MAAM,IAAIH,SAAS,CAACW,MAAM,GAAG,CAAC,EAAE;MAC/BR,YAAY,CAAC,yCAAyC,CAAC;IACzD,CAAC,MAAM,IAAIH,SAAS,CAACW,MAAM,GAAG,EAAE,EAAE;MAChCR,YAAY,CAAC,8CAA8C,CAAC;IAC9D,CAAC,MAAM;MACLA,YAAY,CAAC,EAAE,CAAC;MAChBS,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAEd,SAAS;MACfD;IACF,CAAC;IAEDR,KAAK,CACFwB,IAAI,CAAE,GAAErB,QAAS,WAAU,EAAEmB,SAAS,CAAC,CACvCG,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3Bb,UAAU,CAACY,QAAQ,CAACE,IAAI,CAACf,OAAO,CAAC;MACnC;IACF,CAAC,CAAC,CACDgB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACEzB,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAI4B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDjC,OAAA;MAAK4B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB7B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXrB,KAAK,EAAET,SAAU;QACjB+B,QAAQ,EAAEzB,YAAa;QACvB0B,WAAW,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACD3B,SAAS,iBAAIN,OAAA;QAAK4B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEvB;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACNjC,OAAA;MACEkC,IAAI,EAAC,QAAQ;MACbN,SAAS,EAAC,gBAAgB;MAC1BS,OAAO,EAAEvB,iBAAkB;MAAAe,QAAA,EAC5B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRzB,OAAO,iBAAIR,OAAA;MAAK4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAErB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAAC/B,EAAA,CA7DuBD,IAAI;EAAA,QACRJ,QAAQ;AAAA;AAAAyC,EAAA,GADJrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}