{"ast":null,"code":"import $67UHm$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { useRef as $67UHm$useRef, createElement as $67UHm$createElement, useCallback as $67UHm$useCallback, forwardRef as $67UHm$forwardRef, Children as $67UHm$Children, useEffect as $67UHm$useEffect, Fragment as $67UHm$Fragment } from \"react\";\nimport { composeEventHandlers as $67UHm$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $67UHm$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $67UHm$createContextScope, createContext as $67UHm$createContext } from \"@radix-ui/react-context\";\nimport { useId as $67UHm$useId } from \"@radix-ui/react-id\";\nimport { useControllableState as $67UHm$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { DismissableLayer as $67UHm$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { FocusScope as $67UHm$FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { Portal as $67UHm$Portal } from \"@radix-ui/react-portal\";\nimport { Presence as $67UHm$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $67UHm$Primitive } from \"@radix-ui/react-primitive\";\nimport { useFocusGuards as $67UHm$useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { RemoveScroll as $67UHm$RemoveScroll } from \"react-remove-scroll\";\nimport { hideOthers as $67UHm$hideOthers } from \"aria-hidden\";\nimport { Slot as $67UHm$Slot } from \"@radix-ui/react-slot\";\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$DIALOG_NAME = 'Dialog';\nconst [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $67UHm$createContextScope($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    children: children,\n    open: openProp,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    modal = true\n  } = props;\n  const triggerRef = $67UHm$useRef(null);\n  const contentRef = $67UHm$useRef(null);\n  const [open = false, setOpen] = $67UHm$useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogProvider, {\n    scope: __scopeDialog,\n    triggerRef: triggerRef,\n    contentRef: contentRef,\n    contentId: $67UHm$useId(),\n    titleId: $67UHm$useId(),\n    descriptionId: $67UHm$useId(),\n    open: open,\n    onOpenChange: setOpen,\n    onOpenToggle: $67UHm$useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen]),\n    modal: modal\n  }, children);\n};\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {\n  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$TRIGGER_NAME = 'DialogTrigger';\nconst $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...triggerProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);\n  const composedTriggerRef = $67UHm$useComposedRefs(forwardedRef, context.triggerRef);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": context.contentId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, triggerProps, {\n    ref: composedTriggerRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, context.onOpenToggle)\n  }));\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {\n  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$PORTAL_NAME = 'DialogPortal';\nconst [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {\n  forceMount: undefined\n});\nconst $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    forceMount: forceMount,\n    children: children,\n    container: container\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$PortalProvider, {\n    scope: __scopeDialog,\n    forceMount: forceMount\n  }, $67UHm$Children.map(children, child => /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$Portal, {\n    asChild: true,\n    container: container\n  }, child))));\n};\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {\n  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$OVERLAY_NAME = 'DialogOverlay';\nconst $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  return context.modal ? /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogOverlayImpl, $67UHm$babelruntimehelpersesmextends({}, overlayProps, {\n    ref: forwardedRef\n  }))) : null;\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {\n  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME\n});\nconst $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);\n  return /*#__PURE__*/ (// Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    $67UHm$createElement($67UHm$RemoveScroll, {\n      as: $67UHm$Slot,\n      allowPinchZoom: true,\n      shards: [context.contentRef]\n    }, /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.div, $67UHm$babelruntimehelpersesmextends({\n      \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, overlayProps, {\n      ref: forwardedRef // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n      ,\n\n      style: {\n        pointerEvents: 'auto',\n        ...overlayProps.style\n      }\n    })))\n  );\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$CONTENT_NAME = 'DialogContent';\nconst $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, context.modal ? /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })) : /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentNonModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {\n  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$DialogContentModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, context.contentRef, contentRef); // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n  $67UHm$useEffect(() => {\n    const content = contentRef.current;\n    if (content) return $67UHm$hideOthers(content);\n  }, []);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs // we make sure focus isn't trapped once `DialogContent` has been closed\n    ,\n\n    trapFocus: context.open,\n    disableOutsidePointerEvents: true,\n    onCloseAutoFocus: $67UHm$composeEventHandlers(props.onCloseAutoFocus, event => {\n      var _context$triggerRef$c;\n      event.preventDefault();\n      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n    }),\n    onPointerDownOutside: $67UHm$composeEventHandlers(props.onPointerDownOutside, event => {\n      const originalEvent = event.detail.originalEvent;\n      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n      const isRightClick = originalEvent.button === 2 || ctrlLeftClick; // If the event is a right-click, we shouldn't close because\n      // it is effectively as if we right-clicked the `Overlay`.\n      if (isRightClick) event.preventDefault();\n    }) // When focus is trapped, a `focusout` event may still happen.\n    ,\n\n    onFocusOutside: $67UHm$composeEventHandlers(props.onFocusOutside, event => event.preventDefault())\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$DialogContentNonModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const hasInteractedOutsideRef = $67UHm$useRef(false);\n  const hasPointerDownOutsideRef = $67UHm$useRef(false);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    onCloseAutoFocus: event => {\n      var _props$onCloseAutoFoc;\n      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);\n      if (!event.defaultPrevented) {\n        var _context$triggerRef$c2;\n        if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(); // Always prevent auto focus because we either focus manually or want user agent focus\n        event.preventDefault();\n      }\n      hasInteractedOutsideRef.current = false;\n      hasPointerDownOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      var _props$onInteractOuts, _context$triggerRef$c3;\n      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef.current = true;\n        if (event.detail.originalEvent.type === 'pointerdown') hasPointerDownOutsideRef.current = true;\n      } // Prevent dismissing when clicking the trigger.\n      // As the trigger is already setup to close, without doing so would\n      // cause it to close and immediately open.\n      const target = event.target;\n      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);\n      if (targetIsTrigger) event.preventDefault(); // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n      // we will get the pointer down outside event on the trigger, but then a subsequent\n      // focus outside event on the container, we ignore any focus outside event when we've\n      // already had a pointer down outside event.\n      if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) event.preventDefault();\n    }\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$DialogContentImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    trapFocus: trapFocus,\n    onOpenAutoFocus: onOpenAutoFocus,\n    onCloseAutoFocus: onCloseAutoFocus,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, contentRef); // Make sure the whole tree has focus guards as our `Dialog` will be\n  // the last element in the DOM (beacuse of the `Portal`)\n  $67UHm$useFocusGuards();\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Fragment, null, /*#__PURE__*/$67UHm$createElement($67UHm$FocusScope, {\n    asChild: true,\n    loop: true,\n    trapped: trapFocus,\n    onMountAutoFocus: onOpenAutoFocus,\n    onUnmountAutoFocus: onCloseAutoFocus\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$DismissableLayer, $67UHm$babelruntimehelpersesmextends({\n    role: \"dialog\",\n    id: context.contentId,\n    \"aria-describedby\": context.descriptionId,\n    \"aria-labelledby\": context.titleId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, contentProps, {\n    ref: composedRefs,\n    onDismiss: () => context.onOpenChange(false)\n  }))), false);\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$TITLE_NAME = 'DialogTitle';\nconst $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...titleProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.h2, $67UHm$babelruntimehelpersesmextends({\n    id: context.titleId\n  }, titleProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {\n  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = 'DialogDescription';\nconst $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...descriptionProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.p, $67UHm$babelruntimehelpersesmextends({\n    id: context.descriptionId\n  }, descriptionProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {\n  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\nconst $5d3850c4d0b4e6c7$var$CLOSE_NAME = 'DialogClose';\nconst $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...closeProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\"\n  }, closeProps, {\n    ref: forwardedRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n  }));\n});\n/*#__PURE__*/\nObject.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {\n  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nfunction $5d3850c4d0b4e6c7$var$getState(open) {\n  return open ? 'open' : 'closed';\n}\nconst $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = 'DialogTitleWarning';\nconst [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $67UHm$createContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {\n  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,\n  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,\n  docsSlug: 'dialog'\n});\nconst $5d3850c4d0b4e6c7$var$TitleWarning = _ref => {\n  let {\n    titleId: titleId\n  } = _ref;\n  const titleWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME);\n  const MESSAGE = \"`\".concat(titleWarningContext.contentName, \"` requires a `\").concat(titleWarningContext.titleName, \"` for the component to be accessible for screen reader users.\\n\\nIf you want to hide the `\").concat(titleWarningContext.titleName, \"`, you can wrap it with our VisuallyHidden component.\\n\\nFor more information, see https://radix-ui.com/primitives/docs/components/\").concat(titleWarningContext.docsSlug);\n  $67UHm$useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n  return null;\n};\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\nconst $5d3850c4d0b4e6c7$var$DescriptionWarning = _ref2 => {\n  let {\n    contentRef: contentRef,\n    descriptionId: descriptionId\n  } = _ref2;\n  const descriptionWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME);\n  const MESSAGE = \"Warning: Missing `Description` or `aria-describedby={undefined}` for {\".concat(descriptionWarningContext.contentName, \"}.\");\n  $67UHm$useEffect(() => {\n    var _contentRef$current;\n    const describedById = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getAttribute('aria-describedby'); // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n  return null;\n};\nconst $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;\nconst $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;\nconst $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;\nconst $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;\nconst $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;\nconst $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;\nconst $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;\nconst $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;\nexport { $5d3850c4d0b4e6c7$export$cc702773b8ea3e41 as createDialogScope, $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 as Dialog, $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 as DialogTrigger, $5d3850c4d0b4e6c7$export$dad7c95542bacce0 as DialogPortal, $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 as DialogOverlay, $5d3850c4d0b4e6c7$export$b6d9565de1e068cf as DialogContent, $5d3850c4d0b4e6c7$export$16f7638e4a34b909 as DialogTitle, $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 as DialogDescription, $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac as DialogClose, $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 as Root, $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 as Trigger, $5d3850c4d0b4e6c7$export$602eac185826482c as Portal, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff as Overlay, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 as Content, $5d3850c4d0b4e6c7$export$f99233281efd08a0 as Title, $5d3850c4d0b4e6c7$export$393edc798c47379d as Description, $5d3850c4d0b4e6c7$export$f39c2d165cd861fe as Close, $5d3850c4d0b4e6c7$export$69b62a49393917d6 as WarningProvider };","map":{"version":3,"sources":["C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\node_modules\\@radix-ui\\react-dialog\\dist\\packages\\react\\dialog\\src\\Dialog.tsx"],"names":["DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","props","__scopeDialog","children","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","React","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","useId","prevOpen","TRIGGER_NAME","DialogTrigger","forwardedRef","context","composedTriggerRef","useComposedRefs","contentId","getState","triggerProps","composeEventHandlers","onClick","onOpenToggle","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","DialogPortal","container","map","child","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","Slot","pointerEvents","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","composedRefs","content","current","hideOthers","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","button","ctrlKey","isRightClick","onFocusOutside","DialogContentNonModal","hasInteractedOutsideRef","hasPointerDownOutsideRef","defaultPrevented","onInteractOutside","type","target","targetIsTrigger","contains","DialogContentImpl","trapFocus","onOpenAutoFocus","useFocusGuards","descriptionId","titleId","process","TITLE_NAME","DialogTitle","titleProps","DESCRIPTION_NAME","DialogDescription","descriptionProps","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","TitleWarning","titleWarningContext","MESSAGE","hasTitle","document","getElementById","Error","DESCRIPTION_WARNING_NAME","DescriptionWarning","descriptionWarningContext","describedById","getAttribute","hasDescription","console","warn","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"]},"metadata":{},"sourceType":"module"}