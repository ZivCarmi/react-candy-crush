{"ast":null,"code":"import * as $2AODx$react from \"react\";\nimport { useLayoutEffect as $2AODx$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nconst $1746a345f3d73bb7$var$useReactId = $2AODx$react['useId'.toString()] || (() => undefined);\nlet $1746a345f3d73bb7$var$count = 0;\nfunction $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {\n  const [id, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId()); // React versions older than 18 will have client-side ids only.\n  $2AODx$useLayoutEffect(() => {\n    if (!deterministicId) setId(reactId => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\nexport { $1746a345f3d73bb7$export$f680877a34711e37 as useId };","map":{"version":3,"sources":["C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\node_modules\\@radix-ui\\react-id\\dist\\packages\\react\\id\\src\\id.tsx"],"names":["useReactId","React","toString","undefined","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String"],"mappings":";;AAIA,MAAMA,gCAAU,GAAIC,YAAD,CAAe,OAAA,CAAQC,QAAR,CAAA,CAAf,CAAA,KAAuC,MAAMC,SAA7C,CAAA;AACnB,IAAIC,2BAAK,GAAG,CAAZ;AAEA,SAASC,yCAAT,CAAeC,eAAf,EAAiD;EAC/C,MAAM,CAACC,EAAD,EAAKC,KAAL,CAAA,GAAcP,YAAK,CAACQ,QAANR,CAAmCD,gCAAU,CAAA,CAA7CC,CAApB,CAAA,CAAA;EAEAS,sBAAe,CAAC,MAAM;IACpB,IAAI,CAACJ,eAAL,EAAsB,KAAK,CAAEK,OAAD,IAAaA,OAAb,KAAA,IAAA,IAAaA,OAAb,KAAA,KAAA,CAAA,GAAaA,OAAb,GAAwBC,MAAM,CAACR,2BAAK,EAArC,CAAA,CAA3B;GADa,EAEZ,CAACE,eAAD,CAFY,CAAfI;EAGA,OAAOJ,eAAe,KAAKC,EAAE,GAAI,SAAQA,EAAG,EAAf,GAAmB,EAA1B,CAAtB;AACD","sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n"]},"metadata":{},"sourceType":"module"}