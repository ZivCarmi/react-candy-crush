{"ast":null,"code":"import { useEffect as $1wErz$useEffect } from \"react\";\n\n/** Number of components which have requested interest to have focus guards */\nlet $3db38b7d1fb3fe6a$var$count = 0;\nfunction $3db38b7d1fb3fe6a$export$ac5b58043b79449b(props) {\n  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();\n  return props.children;\n}\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {\n  $1wErz$useEffect(() => {\n    var _edgeGuards$, _edgeGuards$2;\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());\n    $3db38b7d1fb3fe6a$var$count++;\n    return () => {\n      if ($3db38b7d1fb3fe6a$var$count === 1) document.querySelectorAll('[data-radix-focus-guard]').forEach(node => node.remove());\n      $3db38b7d1fb3fe6a$var$count--;\n    };\n  }, []);\n}\nfunction $3db38b7d1fb3fe6a$var$createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\nconst $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9 = $3db38b7d1fb3fe6a$export$ac5b58043b79449b;\nexport { $3db38b7d1fb3fe6a$export$ac5b58043b79449b as FocusGuards, $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9 as Root, $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c as useFocusGuards };","map":{"version":3,"sources":["C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\node_modules\\@radix-ui\\react-focus-guards\\dist\\packages\\react\\focus-guards\\src\\FocusGuards.tsx"],"names":["count","FocusGuards","props","useFocusGuards","children","React","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"mappings":";;AAEA;AACA,IAAIA,2BAAK,GAAG,CAAZ;AAEA,SAASC,yCAAT,CAAqBC,KAArB,EAAiC;EAC/BC,yCAAc,CAAA,CAAdA;EACA,OAAOD,KAAK,CAACE,QAAb;AACD;AAED;;;AAGA;AACA,SAASD,yCAAT,CAAA,EAA0B;EACxBE,gBAAAA,CAAgB,MAAM;IAAA,IAAA,YAAA,EAAA,aAAA;IACpB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAATD,CAA0B,0BAA1BA,CAAnB;IACAA,QAAQ,CAACE,IAATF,CAAcG,qBAAdH,CAAoC,YAApCA,EAAAA,CAAAA,YAAAA,GAAkDD,UAAU,CAAC,CAAD,CAA5DC,MAAAA,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,YAAAA,GAAmEI,sCAAgB,CAAA,CAAnFJ,CAAAA;IACAA,QAAQ,CAACE,IAATF,CAAcG,qBAAdH,CAAoC,WAApCA,EAAAA,CAAAA,aAAAA,GAAiDD,UAAU,CAAC,CAAD,CAA3DC,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,aAAAA,GAAkEI,sCAAgB,CAAA,CAAlFJ,CAAAA;IACAP,2BAAK,EAALA;IAEA,OAAO,MAAM;MACX,IAAIA,2BAAK,KAAK,CAAd,EACE,QAAQ,CAACQ,gBAAT,CAA0B,0BAA1B,CAAA,CAAsDI,OAAtD,CAA+DC,IAAD,IAAUA,IAAI,CAACC,MAALD,CAAxE,CAAA,CAAA;MAEFb,2BAAK,EAALA;KAJF;GANFK,EAYG,EAZHA,CAYC;AACF;AAED,SAASM,sCAAT,CAAA,EAA4B;EAC1B,MAAMI,OAAO,GAAGR,QAAQ,CAACS,aAATT,CAAuB,MAAvBA,CAAhB;EACAQ,OAAO,CAACE,YAARF,CAAqB,wBAArBA,EAA+C,EAA/CA,CAAAA;EACAA,OAAO,CAACG,QAARH,GAAmB,CAAnBA;EACAA,OAAO,CAACI,KAARJ,CAAcK,OAAdL,GAAwB,kEAAxBA;EACA,OAAOA,OAAP;AACD;AAED,MAAMM,yCAAI,GAAGpB,yCAAb","sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"]},"metadata":{},"sourceType":"module"}