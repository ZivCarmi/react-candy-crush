{"ast":null,"code":"import $kqwpH$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { createContext as $kqwpH$createContext, forwardRef as $kqwpH$forwardRef, useContext as $kqwpH$useContext, useState as $kqwpH$useState, useEffect as $kqwpH$useEffect, createElement as $kqwpH$createElement, useRef as $kqwpH$useRef } from \"react\";\nimport { composeEventHandlers as $kqwpH$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive as $kqwpH$Primitive, dispatchDiscreteCustomEvent as $kqwpH$dispatchDiscreteCustomEvent } from \"@radix-ui/react-primitive\";\nimport { useComposedRefs as $kqwpH$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef as $kqwpH$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useEscapeKeydown as $kqwpH$useEscapeKeydown } from \"@radix-ui/react-use-escape-keydown\";\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\nconst $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst $5cb92bef7577960e$var$CONTEXT_UPDATE = 'dismissableLayer.update';\nconst $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst $5cb92bef7577960e$var$FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\nlet $5cb92bef7577960e$var$originalBodyPointerEvents;\nconst $5cb92bef7577960e$var$DismissableLayerContext = /*#__PURE__*/$kqwpH$createContext({\n  layers: new Set(),\n  layersWithOutsidePointerEventsDisabled: new Set(),\n  branches: new Set()\n});\nconst $5cb92bef7577960e$export$177fb62ff3ec1f22 = /*#__PURE__*/$kqwpH$forwardRef((props, forwardedRef) => {\n  var _node$ownerDocument;\n  const {\n    disableOutsidePointerEvents = false,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onPointerDownOutside: onPointerDownOutside,\n    onFocusOutside: onFocusOutside,\n    onInteractOutside: onInteractOutside,\n    onDismiss: onDismiss,\n    ...layerProps\n  } = props;\n  const context = $kqwpH$useContext($5cb92bef7577960e$var$DismissableLayerContext);\n  const [node1, setNode] = $kqwpH$useState(null);\n  const ownerDocument = (_node$ownerDocument = node1 === null || node1 === void 0 ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  const [, force] = $kqwpH$useState({});\n  const composedRefs = $kqwpH$useComposedRefs(forwardedRef, node => setNode(node));\n  const layers = Array.from(context.layers);\n  const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n  const index = node1 ? layers.indexOf(node1) : -1;\n  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n  const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n  const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside(event => {\n    const target = event.target;\n    const isPointerDownOnBranch = [...context.branches].some(branch => branch.contains(target));\n    if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);\n    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n  }, ownerDocument);\n  const focusOutside = $5cb92bef7577960e$var$useFocusOutside(event => {\n    const target = event.target;\n    const isFocusInBranch = [...context.branches].some(branch => branch.contains(target));\n    if (isFocusInBranch) return;\n    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);\n    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n  }, ownerDocument);\n  $kqwpH$useEscapeKeydown(event => {\n    const isHighestLayer = index === context.layers.size - 1;\n    if (!isHighestLayer) return;\n    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }, ownerDocument);\n  $kqwpH$useEffect(() => {\n    if (!node1) return;\n    if (disableOutsidePointerEvents) {\n      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n        $5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n        ownerDocument.body.style.pointerEvents = 'none';\n      }\n      context.layersWithOutsidePointerEventsDisabled.add(node1);\n    }\n    context.layers.add(node1);\n    $5cb92bef7577960e$var$dispatchUpdate();\n    return () => {\n      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;\n    };\n  }, [node1, ownerDocument, disableOutsidePointerEvents, context]);\n  /**\n  * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n  * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n  * and add it to the end again so the layering order wouldn't be _creation order_.\n  * We only want them to be removed from context stacks when unmounted.\n  */\n  $kqwpH$useEffect(() => {\n    return () => {\n      if (!node1) return;\n      context.layers.delete(node1);\n      context.layersWithOutsidePointerEventsDisabled.delete(node1);\n      $5cb92bef7577960e$var$dispatchUpdate();\n    };\n  }, [node1, context]);\n  $kqwpH$useEffect(() => {\n    const handleUpdate = () => force({});\n    document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);\n    return () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);\n  }, []);\n  return /*#__PURE__*/$kqwpH$createElement($kqwpH$Primitive.div, $kqwpH$babelruntimehelpersesmextends({}, layerProps, {\n    ref: composedRefs,\n    style: {\n      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? 'auto' : 'none' : undefined,\n      ...props.style\n    },\n    onFocusCapture: $kqwpH$composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),\n    onBlurCapture: $kqwpH$composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),\n    onPointerDownCapture: $kqwpH$composeEventHandlers(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n  }));\n});\n/*#__PURE__*/\nObject.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {\n  displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\nconst $5cb92bef7577960e$var$BRANCH_NAME = 'DismissableLayerBranch';\nconst $5cb92bef7577960e$export$4d5eb2109db14228 = /*#__PURE__*/$kqwpH$forwardRef((props, forwardedRef) => {\n  const context = $kqwpH$useContext($5cb92bef7577960e$var$DismissableLayerContext);\n  const ref = $kqwpH$useRef(null);\n  const composedRefs = $kqwpH$useComposedRefs(forwardedRef, ref);\n  $kqwpH$useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n  return /*#__PURE__*/$kqwpH$createElement($kqwpH$Primitive.div, $kqwpH$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs\n  }));\n});\n/*#__PURE__*/\nObject.assign($5cb92bef7577960e$export$4d5eb2109db14228, {\n  displayName: $5cb92bef7577960e$var$BRANCH_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ /**\n                                                                                                     * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n                                                                                                     * to mimic layer dismissing behaviour present in OS.\n                                                                                                     * Returns props to pass to the node we want to check for outside events.\n                                                                                                     */\nfunction $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside) {\n  let ownerDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  const handlePointerDownOutside = $kqwpH$useCallbackRef(onPointerDownOutside);\n  const isPointerInsideReactTreeRef = $kqwpH$useRef(false);\n  const handleClickRef = $kqwpH$useRef(() => {});\n  $kqwpH$useEffect(() => {\n    const handlePointerDown = event => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = {\n          originalEvent: event\n        };\n        function handleAndDispatchPointerDownOutsideEvent() {\n          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n            discrete: true\n          });\n        }\n        /**\n        * On touch devices, we need to wait for a click event because browsers implement\n        * a ~350ms delay between the time the user stops touching the display and when the\n        * browser executres events. We need to ensure we don't reactivate pointer-events within\n        * this timeframe otherwise the browser may execute events that should have been prevented.\n        *\n        * Additionally, this also lets us deal automatically with cancellations when a click event\n        * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n        *\n        * This is why we also continuously remove the previous listener, because we cannot be\n        * certain that it was raised, and therefore cleaned-up.\n        */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, {\n            once: true\n          });\n        } else handleAndDispatchPointerDownOutsideEvent();\n      } else\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n    * if this hook executes in a component that mounts via a `pointerdown` event, the event\n    * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n    * this by delaying the event listener registration on the document.\n    * This is not React specific, but rather how the DOM works, ie:\n    * ```\n    * button.addEventListener('pointerdown', () => {\n    *   console.log('I will log');\n    *   document.addEventListener('pointerdown', () => {\n    *     console.log('I will also log');\n    *   })\n    * });\n    */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true\n  };\n}\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction $5cb92bef7577960e$var$useFocusOutside(onFocusOutside) {\n  let ownerDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  const handleFocusOutside = $kqwpH$useCallbackRef(onFocusOutside);\n  const isFocusInsideReactTreeRef = $kqwpH$useRef(false);\n  $kqwpH$useEffect(() => {\n    const handleFocus = event => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = {\n          originalEvent: event\n        };\n        $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n  return {\n    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,\n    onBlurCapture: () => isFocusInsideReactTreeRef.current = false\n  };\n}\nfunction $5cb92bef7577960e$var$dispatchUpdate() {\n  const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\nfunction $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, _ref) {\n  let {\n    discrete: discrete\n  } = _ref;\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, {\n    bubbles: false,\n    cancelable: true,\n    detail: detail\n  });\n  if (handler) target.addEventListener(name, handler, {\n    once: true\n  });\n  if (discrete) $kqwpH$dispatchDiscreteCustomEvent(target, event);else target.dispatchEvent(event);\n}\nconst $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22;\nconst $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;\nexport { $5cb92bef7577960e$export$177fb62ff3ec1f22 as DismissableLayer, $5cb92bef7577960e$export$4d5eb2109db14228 as DismissableLayerBranch, $5cb92bef7577960e$export$be92b6f5f03c0fe9 as Root, $5cb92bef7577960e$export$aecb2ddcb55c95be as Branch };","map":{"version":3,"sources":["C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\node_modules\\@radix-ui\\react-dismissable-layer\\dist\\packages\\react\\dismissable-layer\\src\\DismissableLayer.tsx"],"names":["DISMISSABLE_LAYER_NAME","CONTEXT_UPDATE","POINTER_DOWN_OUTSIDE","FOCUS_OUTSIDE","originalBodyPointerEvents","DismissableLayerContext","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","props","forwardedRef","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","context","React","node","setNode","ownerDocument","globalThis","document","force","composedRefs","useComposedRefs","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","event","target","isPointerDownOnBranch","some","branch","contains","defaultPrevented","focusOutside","useFocusOutside","isFocusInBranch","useEscapeKeydown","isHighestLayer","preventDefault","body","style","pointerEvents","add","dispatchUpdate","delete","handleUpdate","addEventListener","removeEventListener","layerProps","undefined","composeEventHandlers","onFocusCapture","onBlurCapture","onPointerDownCapture","BRANCH_NAME","DismissableLayerBranch","ref","current","handlePointerDownOutside","useCallbackRef","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","eventDetail","originalEvent","handleAndDispatchPointerDownOutsideEvent","handleAndDispatchCustomEvent","discrete","pointerType","once","timerId","setTimeout","window","clearTimeout","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","CustomEvent","dispatchEvent","name","handler","detail","bubbles","cancelable","dispatchDiscreteCustomEvent","Root","Branch"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n"]},"metadata":{},"sourceType":"module"}