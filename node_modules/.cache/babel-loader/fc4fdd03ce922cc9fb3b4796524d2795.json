{"ast":null,"code":"import{useEffect,useState}from\"react\";import Blank from\"../images/blank.png\";import{width,candyColors,firstRowIndexes}from\"../lib/constants\";import Hints from\"./Hints\";import{useScore}from\"./ScoreProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Board(){const[board,setBoard]=useState([]);const[draggedCandy,setDraggedCandy]=useState(null);const[candyToBeSwitch,setCandyToBeSwitch]=useState(null);const{score,setScore}=useScore();const[isHintClicked,setIsHintClicked]=useState(false);const[cursor,setCursor]=useState(null);const[candyToHammer,setCandyToHammer]=useState(null);const createBoard=()=>{const randomBoard=[];for(let i=0;i<width*width;i++){randomBoard.push(candyColors[Math.floor(Math.random()*candyColors.length)]);}setBoard(randomBoard);};const checkForColumnOfFive=()=>{for(let i=0;i<width*width-width*4;i++){const candiesToCheck=[i,i+width,i+width*2,i+width*3,i+width*4];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+5);return true;}}};const checkForRowOfFive=()=>{for(let i=0;i<width*width-4;i++){const candiesToPassCheck=[4,5,6,7,12,13,14,15,20,21,22,23,28,29,30,31,36,37,38,39,44,45,46,47,52,53,54,55];if(candiesToPassCheck.includes(i))continue;const candiesToCheck=[i,i+1,i+2,i+3,i+4];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+5);return true;}}};const checkForColumnOfFour=()=>{for(let i=0;i<width*width-width*3;i++){const candiesToCheck=[i,i+width,i+width*2,i+width*3];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+4);return true;}}};const checkForRowOfFour=()=>{for(let i=0;i<width*width-3;i++){const candiesToPassCheck=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55];if(candiesToPassCheck.includes(i))continue;const candiesToCheck=[i,i+1,i+2,i+3];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+4);return true;}}};const checkForColumnOfThree=()=>{for(let i=0;i<width*width-width*2;i++){const candiesToCheck=[i,i+width,i+width*2];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+3);return true;}}};const checkForRowOfThree=()=>{for(let i=0;i<width*width-2;i++){// need to rethink that array to be dynamic\nconst candiesToPassCheck=[6,7,14,15,22,23,30,31,38,39,46,47,54,55];if(candiesToPassCheck.includes(i))continue;const candiesToCheck=[i,i+1,i+2];const colorToBeCheck=board[i];const isBlank=board[i]===Blank;if(candiesToCheck.every(candyToCheck=>board[candyToCheck]===colorToBeCheck)&&!isBlank){candiesToCheck.forEach(candyToCheck=>board[candyToCheck]=Blank);setScore(score+3);return true;}}};const moveDownASquare=()=>{for(let i=board.length-1;i>=0;i--){// generate random candy into blank squares\nif(firstRowIndexes.includes(i)&&board[i]===Blank){board[i]=candyColors[Math.floor(Math.random()*candyColors.length)];}// move candy to square below\nif(board[i]===Blank){board[i]=board[i-width];board[i-width]=Blank;}}};const onDragStart=e=>{setDraggedCandy(e.target);};const onDragDrop=e=>{setCandyToBeSwitch(e.target);};const onDragEnd=()=>{if(draggedCandy&&candyToBeSwitch){const candyBeingDraggedIndex=parseInt(draggedCandy.getAttribute(\"data-index\"));const candyBeingReplacedIndex=parseInt(candyToBeSwitch.getAttribute(\"data-index\"));const validMoves=[candyBeingDraggedIndex-width,candyBeingDraggedIndex+1,candyBeingDraggedIndex+width,candyBeingDraggedIndex-1];const isValidMove=validMoves.includes(candyBeingReplacedIndex);if(isValidMove){board[candyBeingDraggedIndex]=candyToBeSwitch.getAttribute(\"src\");board[candyBeingReplacedIndex]=draggedCandy.getAttribute(\"src\");const isAColumnOfFive=checkForColumnOfFive();const isARowOfFive=checkForRowOfFive();const isAColumnOfFour=checkForColumnOfFour();const isARowOfFour=checkForRowOfFour();const isAColumnOfThree=checkForColumnOfThree();const isARowOfThree=checkForRowOfThree();if(candyToBeSwitch&&(isAColumnOfFive||isARowOfFive||isAColumnOfFour||isARowOfFour||isAColumnOfThree||isARowOfThree)){setDraggedCandy(null);setCandyToBeSwitch(null);}else{board[candyBeingDraggedIndex]=draggedCandy.getAttribute(\"src\");board[candyBeingReplacedIndex]=candyToBeSwitch.getAttribute(\"src\");setBoard([...board]);}}}};const setCandyToHammerTarget=e=>{setCandyToHammer(e.target);};useEffect(()=>{createBoard();},[]);useEffect(()=>{const timer=setInterval(()=>{checkForColumnOfFive();checkForRowOfFive();checkForColumnOfFour();checkForRowOfFour();checkForColumnOfThree();checkForRowOfThree();moveDownASquare();setBoard([...board]);},200);return()=>clearInterval(timer);},[checkForColumnOfFive,checkForRowOfFive,checkForColumnOfFour,checkForRowOfFour,checkForColumnOfThree,checkForRowOfThree,moveDownASquare,board]);return/*#__PURE__*/_jsxs(\"div\",{className:\"board-container\".concat(cursor?\" custom-cursor\":\"\"),style:{cursor:cursor?\"\".concat(cursor,\", auto\"):\"\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:board.map((candy,index)=>{return/*#__PURE__*/_jsx(\"img\",{src:candy,alt:\"\",className:\"candy\",\"data-index\":index,draggable:\"true\",onDragStart:onDragStart,onDrop:onDragDrop,onDragOver:e=>e.preventDefault(),onDragEnter:e=>e.preventDefault(),onDragLeave:e=>e.preventDefault(),onDragEnd:onDragEnd,onClick:isHintClicked?setCandyToHammerTarget:null},index);})}),/*#__PURE__*/_jsx(Hints,{boardState:{board,setBoard},cursorState:{cursor,setCursor},isHintClickedState:{isHintClicked,setIsHintClicked},candyToHammerState:{candyToHammer,setCandyToHammer}})]});}","map":{"version":3,"names":["useEffect","useState","Blank","width","candyColors","firstRowIndexes","Hints","useScore","jsx","_jsx","jsxs","_jsxs","Board","board","setBoard","draggedCandy","setDraggedCandy","candyToBeSwitch","setCandyToBeSwitch","score","setScore","isHintClicked","setIsHintClicked","cursor","setCursor","candyToHammer","setCandyToHammer","createBoard","randomBoard","i","push","Math","floor","random","length","checkForColumnOfFive","candiesToCheck","colorToBeCheck","isBlank","every","candyToCheck","forEach","checkForRowOfFive","candiesToPassCheck","includes","checkForColumnOfFour","checkForRowOfFour","checkForColumnOfThree","checkForRowOfThree","moveDownASquare","onDragStart","e","target","onDragDrop","onDragEnd","candyBeingDraggedIndex","parseInt","getAttribute","candyBeingReplacedIndex","validMoves","isValidMove","isAColumnOfFive","isARowOfFive","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","setCandyToHammerTarget","timer","setInterval","clearInterval","className","concat","style","children","map","candy","index","src","alt","draggable","onDrop","onDragOver","preventDefault","onDragEnter","onDragLeave","onClick","boardState","cursorState","isHintClickedState","candyToHammerState"],"sources":["C:/Users/Ziv/Desktop/Work/ziv-react-candy-crush/src/components/Board.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Blank from \"../images/blank.png\";\r\nimport { width, candyColors, firstRowIndexes } from \"../lib/constants\";\r\nimport Hints from \"./Hints\";\r\nimport { useScore } from \"./ScoreProvider\";\r\n\r\nexport default function Board() {\r\n  const [board, setBoard] = useState([]);\r\n  const [draggedCandy, setDraggedCandy] = useState(null);\r\n  const [candyToBeSwitch, setCandyToBeSwitch] = useState(null);\r\n  const { score, setScore } = useScore();\r\n  const [isHintClicked, setIsHintClicked] = useState(false);\r\n  const [cursor, setCursor] = useState(null);\r\n  const [candyToHammer, setCandyToHammer] = useState(null);\r\n\r\n  const createBoard = () => {\r\n    const randomBoard = [];\r\n    for (let i = 0; i < width * width; i++) {\r\n      randomBoard.push(\r\n        candyColors[Math.floor(Math.random() * candyColors.length)]\r\n      );\r\n    }\r\n\r\n    setBoard(randomBoard);\r\n  };\r\n\r\n  const checkForColumnOfFive = () => {\r\n    for (let i = 0; i < width * width - width * 4; i++) {\r\n      const candiesToCheck = [\r\n        i,\r\n        i + width,\r\n        i + width * 2,\r\n        i + width * 3,\r\n        i + width * 4,\r\n      ];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfFive = () => {\r\n    for (let i = 0; i < width * width - 4; i++) {\r\n      const candiesToPassCheck = [\r\n        4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38,\r\n        39, 44, 45, 46, 47, 52, 53, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3, i + 4];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 5);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForColumnOfFour = () => {\r\n    for (let i = 0; i < width * width - width * 3; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2, i + width * 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfFour = () => {\r\n    for (let i = 0; i < width * width - 3; i++) {\r\n      const candiesToPassCheck = [\r\n        5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53,\r\n        54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2, i + 3];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 4);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForColumnOfThree = () => {\r\n    for (let i = 0; i < width * width - width * 2; i++) {\r\n      const candiesToCheck = [i, i + width, i + width * 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForRowOfThree = () => {\r\n    for (let i = 0; i < width * width - 2; i++) {\r\n      // need to rethink that array to be dynamic\r\n      const candiesToPassCheck = [\r\n        6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55,\r\n      ];\r\n\r\n      if (candiesToPassCheck.includes(i)) continue;\r\n\r\n      const candiesToCheck = [i, i + 1, i + 2];\r\n      const colorToBeCheck = board[i];\r\n      const isBlank = board[i] === Blank;\r\n\r\n      if (\r\n        candiesToCheck.every(\r\n          (candyToCheck) => board[candyToCheck] === colorToBeCheck\r\n        ) &&\r\n        !isBlank\r\n      ) {\r\n        candiesToCheck.forEach((candyToCheck) => (board[candyToCheck] = Blank));\r\n        setScore(score + 3);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveDownASquare = () => {\r\n    for (let i = board.length - 1; i >= 0; i--) {\r\n      // generate random candy into blank squares\r\n      if (firstRowIndexes.includes(i) && board[i] === Blank) {\r\n        board[i] = candyColors[Math.floor(Math.random() * candyColors.length)];\r\n      }\r\n\r\n      // move candy to square below\r\n      if (board[i] === Blank) {\r\n        board[i] = board[i - width];\r\n        board[i - width] = Blank;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragStart = (e) => {\r\n    setDraggedCandy(e.target);\r\n  };\r\n\r\n  const onDragDrop = (e) => {\r\n    setCandyToBeSwitch(e.target);\r\n  };\r\n\r\n  const onDragEnd = () => {\r\n    if (draggedCandy && candyToBeSwitch) {\r\n      const candyBeingDraggedIndex = parseInt(\r\n        draggedCandy.getAttribute(\"data-index\")\r\n      );\r\n      const candyBeingReplacedIndex = parseInt(\r\n        candyToBeSwitch.getAttribute(\"data-index\")\r\n      );\r\n\r\n      const validMoves = [\r\n        candyBeingDraggedIndex - width,\r\n        candyBeingDraggedIndex + 1,\r\n        candyBeingDraggedIndex + width,\r\n        candyBeingDraggedIndex - 1,\r\n      ];\r\n      const isValidMove = validMoves.includes(candyBeingReplacedIndex);\r\n\r\n      if (isValidMove) {\r\n        board[candyBeingDraggedIndex] = candyToBeSwitch.getAttribute(\"src\");\r\n        board[candyBeingReplacedIndex] = draggedCandy.getAttribute(\"src\");\r\n\r\n        const isAColumnOfFive = checkForColumnOfFive();\r\n        const isARowOfFive = checkForRowOfFive();\r\n        const isAColumnOfFour = checkForColumnOfFour();\r\n        const isARowOfFour = checkForRowOfFour();\r\n        const isAColumnOfThree = checkForColumnOfThree();\r\n        const isARowOfThree = checkForRowOfThree();\r\n\r\n        if (\r\n          candyToBeSwitch &&\r\n          (isAColumnOfFive ||\r\n            isARowOfFive ||\r\n            isAColumnOfFour ||\r\n            isARowOfFour ||\r\n            isAColumnOfThree ||\r\n            isARowOfThree)\r\n        ) {\r\n          setDraggedCandy(null);\r\n          setCandyToBeSwitch(null);\r\n        } else {\r\n          board[candyBeingDraggedIndex] = draggedCandy.getAttribute(\"src\");\r\n          board[candyBeingReplacedIndex] = candyToBeSwitch.getAttribute(\"src\");\r\n          setBoard([...board]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const setCandyToHammerTarget = (e) => {\r\n    setCandyToHammer(e.target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createBoard();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      checkForColumnOfFive();\r\n      checkForRowOfFive();\r\n      checkForColumnOfFour();\r\n      checkForRowOfFour();\r\n      checkForColumnOfThree();\r\n      checkForRowOfThree();\r\n      moveDownASquare();\r\n      setBoard([...board]);\r\n    }, 200);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [\r\n    checkForColumnOfFive,\r\n    checkForRowOfFive,\r\n    checkForColumnOfFour,\r\n    checkForRowOfFour,\r\n    checkForColumnOfThree,\r\n    checkForRowOfThree,\r\n    moveDownASquare,\r\n    board,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={`board-container${cursor ? \" custom-cursor\" : \"\"}`}\r\n      style={{ cursor: cursor ? `${cursor}, auto` : \"\" }}\r\n    >\r\n      <div className=\"board\">\r\n        {board.map((candy, index) => {\r\n          return (\r\n            <img\r\n              src={candy}\r\n              alt=\"\"\r\n              className=\"candy\"\r\n              data-index={index}\r\n              key={index}\r\n              draggable=\"true\"\r\n              onDragStart={onDragStart}\r\n              onDrop={onDragDrop}\r\n              onDragOver={(e) => e.preventDefault()}\r\n              onDragEnter={(e) => e.preventDefault()}\r\n              onDragLeave={(e) => e.preventDefault()}\r\n              onDragEnd={onDragEnd}\r\n              onClick={isHintClicked ? setCandyToHammerTarget : null}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Hints\r\n        boardState={{ board, setBoard }}\r\n        cursorState={{ cursor, setCursor }}\r\n        isHintClickedState={{ isHintClicked, setIsHintClicked }}\r\n        candyToHammerState={{ candyToHammer, setCandyToHammer }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}