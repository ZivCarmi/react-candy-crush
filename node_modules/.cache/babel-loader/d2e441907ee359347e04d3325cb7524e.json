{"ast":null,"code":"import { useRef as $lwiWj$useRef, useEffect as $lwiWj$useEffect, useMemo as $lwiWj$useMemo } from \"react\";\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {\n  const callbackRef = $lwiWj$useRef(callback);\n  $lwiWj$useEffect(() => {\n    callbackRef.current = callback;\n  }); // https://github.com/facebook/react/issues/19240\n  return $lwiWj$useMemo(() => function () {\n    var _callbackRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n  }, []);\n}\nexport { $b1b2314f5f9a1d84$export$25bec8c6f54ee79a as useCallbackRef };","map":{"version":3,"sources":["C:\\Users\\Ziv\\Desktop\\Work\\ziv-react-candy-crush\\node_modules\\@radix-ui\\react-use-callback-ref\\dist\\packages\\react\\use-callback-ref\\src\\useCallbackRef.tsx"],"names":["useCallbackRef","callback","callbackRef","React","current","args"],"mappings":";;AAEA;;;AAGA;AACA,SAASA,yCAAT,CAA2DC,QAA3D,EAAuF;EACrF,MAAMC,WAAW,GAAGC,aAAAA,CAAaF,QAAbE,CAApB;EAEAA,gBAAAA,CAAgB,MAAM;IACpBD,WAAW,CAACE,OAAZF,GAAsBD,QAAtBC;GADFC,CAAAA,CAHqF,CAKpF;EAGD,OAAO,cAAA,CAAc,MAAO,YAA5B;IAA4B,IAAA,oBAAA;IAAA,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIE,IAAJ,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;MAAIA,IAAJ,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;IAAA;IAAA,OAAA,CAAA,oBAAA,GAAaH,WAAW,CAACE,OAAzB,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAaF,oBAAAA,CAAAA,IAAAA,CAAAA,WAAW,EAAA,GAAcG,IAAd,CAAxB;GAArB,EAAwE,EAAxE,CAAP;AACD","sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n"]},"metadata":{},"sourceType":"module"}